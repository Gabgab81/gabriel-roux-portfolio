/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/gptHandFront.glb
*/
import * as THREE from 'three'
import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { FlakesTexture } from 'three-stdlib'

export function GptHand(props) {
  const group = useRef()

  const [texture] = useState(() => new THREE.CanvasTexture(new FlakesTexture(), THREE.UVMapping, THREE.RepeatWrapping, THREE.RepeatWrapping))
  const { nodes, materials, animations } = useGLTF('/models/gptHandFront.glb')
  const { actions } = useAnimations(animations, group)
  // console.log(actions["handFront"])

  useEffect(() => {
    actions["handFront"].play()
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh castShadow receiveShadow name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton}>
            <meshStandardMaterial 
                metalness={1} 
                roughness={0.1} 
                color={materials.Alpha_Joints_MAT}  
                // color={"white"} 
              />
          </skinnedMesh>
          <skinnedMesh castShadow receiveShadow name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton}>
            <meshStandardMaterial
                metalness={0.6}
                roughness={0.2}
                // color={materials['Alpha_Body_MAT.001'].color}
                color={"white"}
                normalMap={texture}
                normalMap-repeat={[35, 35]}
                normalScale={[0.15, 0.15]}
              />
          </skinnedMesh>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('models/gptHandFront.glb')
