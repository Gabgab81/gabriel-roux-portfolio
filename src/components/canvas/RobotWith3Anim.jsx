/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 RobotWith3Anim.glb
*/
import * as THREE from 'three';
import React, { useRef, useState, useEffect } from 'react';
import { useGLTF, useAnimations, useCursor } from '@react-three/drei';
import { FlakesTexture } from 'three-stdlib';

export function Robot(props) {
  const group = useRef()

  const [hovered, set] = useState()
  useCursor(hovered,/*'pointer', 'auto'*/)

  const [texture] = useState(() => new THREE.CanvasTexture(new FlakesTexture(), THREE.UVMapping, THREE.RepeatWrapping, THREE.RepeatWrapping))

  const { nodes, materials, animations } = useGLTF('/RobotWith3Anim.glb')
  const { actions, names } = useAnimations(animations, group)
  
  // Test for the annimation

  const model = useGLTF('/RobotWith3Anim.glb')
  let mixer = new THREE.AnimationMixer(model)
  
  // console.log(mixer)
  mixer.addEventListener('finished', console.log("finished"))

  // Test for the annimation

  useEffect(() => {
    // nodes.addEvenListen('finished', console.log("finished"))
    actions["Typing"].setLoop(THREE.LoopOnce)
    // console.log(actions["Typing"].setLoop(THREE.LoopOnce))
    actions["Typing"].clampWhenFinished = true
    actions["Typing"].play();
    // mixer.addEventListener('finished', console.log("finished"))
    // actions["SittingLA"].reset().fadeIn(0.5).play();
    // console.log(names)
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature">
          <primitive object={nodes.mixamorigHips} />
          <primitive object={nodes.Ctrl_Master} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Left} />
          <primitive object={nodes.Ctrl_Hand_IK_Left} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Right} />
          <primitive object={nodes.Ctrl_Hand_IK_Right} />
          <primitive object={nodes.Ctrl_Foot_IK_Left} />
          <primitive object={nodes.Ctrl_LegPole_IK_Left} />
          <primitive object={nodes.Ctrl_Foot_IK_Right} />
          <primitive object={nodes.Ctrl_LegPole_IK_Right} />

          <skinnedMesh ref={(refRobot)} castShadow receiveShadow name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials['Alpha_Joints_MAT.001']} skeleton={nodes.Alpha_Joints.skeleton}
          onClick={() => {
            console.log("hello")
          }}
          onPointerOver={() => set(true)} onPointerOut={() => set(false)}
          >
            {/* <hemisphereLight intensity={0.5} groundColor='black' /> */}
            {/* <pointLight intensity={1} /> */}
            <meshStandardMaterial 
              metalness={1} 
              roughness={0.1} 
              color={materials['Alpha_Joints_MAT.001'].color}  
              // color={"white"} 
            />
          </skinnedMesh>
          <skinnedMesh castShadow receiveShadow name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials['Alpha_Body_MAT.001']} skeleton={nodes.Alpha_Surface.skeleton}
          onClick={() => {
            console.log("hello")
          } }
          onPointerOver={() => set(true)} onPointerOut={() => set(false)}
          >
            
            <meshStandardMaterial
              metalness={0.4}
              roughness={0.2}
              // color={materials['Alpha_Body_MAT.001'].color}
              color={"white"}
              normalMap={texture}
              normalMap-repeat={[35, 35]}
              normalScale={[0.15, 0.15]}
            />
          </skinnedMesh>
        </group>
        <group name="cs_grp">
          <group name="cs_arm_fk" position={[1.5, 8.5, 0]} scale={0.82} />
          <group name="cs_calf_fk" position={[0.5, 8.5, 0]} scale={0.82} />
          <group name="cs_circle" position={[0.5, 4.5, 0]} scale={0.21} />
          <group name="cs_circle001" position={[0.5, 4.5, 0]} scale={0.21} />
          <group name="cs_circle_025" position={[2.5, 4.5, 0]} scale={0.21} />
          <group name="cs_foot" position={[0.5, 10.5, 0]} rotation={[-Math.PI, 0, 0]} scale={0.31} />
          <group name="cs_foot001" position={[0.5, 10.5, 0]} rotation={[-Math.PI, 0, 0]} scale={0.31} />
          <group name="cs_foot002" position={[0.5, 10.5, 0]} rotation={[-Math.PI, 0, 0]} scale={0.31} />
          <group name="cs_foot_01" position={[0.5, 18.5, 0]} rotation={[0, Math.PI / 2, 0]} scale={2.19} />
          <group name="cs_foot_roll" position={[0.5, 12.5, 0]} scale={0.59} />
          <group name="cs_forearm_fk" position={[2.5, 8.5, 0]} scale={0.82} />
          <group name="cs_hand" position={[0.5, 19.5, 0]} rotation={[-Math.PI, 0, 0]} scale={0.31} />
          <group name="cs_head" position={[0.5, 13.5, 0]} scale={0.21} />
          <group name="cs_hips" position={[0.5, 11.5, 0]} scale={0.21} />
          <group name="cs_master" position={[0.5, 17.5, 0]} scale={0.1} />
          <group name="cs_neck" position={[0.5, 14.5, 0]} scale={0.21} />
          <group name="cs_shoulder_left" position={[0.5, 15.5, 0]} rotation={[-Math.PI, -Math.PI / 2, 0]} scale={1.04} />
          <group name="cs_shoulder_right" position={[0.5, 16.5, 0]} rotation={[-Math.PI, -Math.PI / 2, 0]} scale={1.04} />
          <group name="cs_sphere" position={[0.5, 2.5, 0]} scale={0.21} />
          <group name="cs_sphere_012" position={[3.5, 2.5, 0]} scale={0.21} />
          <group name="cs_square" position={[1.5, 1.5, 0]} rotation={[-Math.PI, 0, 0]} scale={0.15} />
          <group name="cs_square_2" position={[0.5, 1.5, 0]} rotation={[-Math.PI, 0, 0]} scale={0.15} />
          <group name="cs_thigh_fk" position={[0.5, 7.5, 0]} scale={0.82} />
          <group name="cs_toe" position={[0.5, 9.5, 0]} scale={0.43} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/RobotWith3Anim.glb')
